<?php

class Livre extends Objet
{
    protected static $objet = "Livre";
    protected static $cle = "numLivre";
    protected $numLivre;
    protected $titre;
    protected $anneeParution;
    protected $numGenre;

    public function __construct($data = NULL)
    {
        parent::__construct($data);
    }

    public function afficher(){
        return $this->get('titre') . " " . $this->get('anneeParution');
    }

    public function get($attribut)
    {
        return parent::get($attribut); // TODO: Change the autogenerated stub
    }

    public function set($attribut, $valeur)
    {
        parent::set($attribut, $valeur); // TODO: Change the autogenerated stub
    }

    public static function addLivre($titre, $anneeParution, $numGenre){
        $requete = "INSERT INTO Livre (titre, anneeParution, numGenre) VALUES (:titre, :anneeParution, :numGenre)";
        $req_prep = Connexion::pdo()->prepare($requete);
        $tab = array(
            "titre" => $titre,
            "anneeParution" => $anneeParution,
            "numGenre" => $numGenre
        );
        try {
            $req_prep->execute($tab);
            return true;
        } catch (PDOException $e) {
            echo "Erreur d'ajout : " . $e->getMessage();
            return false;
        }
    }

    public static function updateLivre($numLivre, $titre, $anneeParution, $numGenre){
        $requete = "UPDATE Livre SET titre = :titre, anneeParution = :anneeParution, numGenre = :numGenre WHERE numLivre = :numLivre";
        $req_prep = Connexion::pdo()->prepare($requete);
        $tab = array(
            "numLivre" => $numLivre,
            "titre" => $titre,
            "anneeParution" => $anneeParution,
            "numGenre" => $numGenre
        );
        try {
            $req_prep->execute($tab);
            return true;
        } catch (PDOException $e) {
            echo "Erreur de modification : " . $e->getMessage();
            return false;
        }
    }

    public static function getAuteursByNumLivre($i){
        $requete = "select * from auteur where numAuteur in (select numAuteur from estauteurde where numLivre = :numLivre)";
        $req_prep = Connexion::pdo()->prepare($requete);
        $tab = array(
            "numLivre" => $i
        );
        try {
            $req_prep->execute($tab);
            $req_prep->setFetchMode(PDO::FETCH_CLASS, 'Auteur');
            $tab = $req_prep->fetchAll();
            return $tab;
        } catch (PDOException $e) {
            echo "Erreur de récupération : " . $e->getMessage();
            return false;
        }
    }

    public static function getNonAuteursByNumLivre($i){
        $requete = "select * from auteur where numAuteur not in (select numAuteur from estauteurde where numLivre = :numLivre)";
        $req_prep = Connexion::pdo()->prepare($requete);
        $tab = array(
            "numLivre" => $i
        );
        try {
            $req_prep->execute($tab);
            $req_prep->setFetchMode(PDO::FETCH_CLASS, 'Auteur');
            $tab = $req_prep->fetchAll();
            return $tab;
        } catch (PDOException $e) {
            echo "Erreur de récupération : " . $e->getMessage();
            return false;
        }
    }

    public static function deleteAuteurForLivre($numLivre, $numAuteur){
        $requete = "DELETE FROM estauteurde WHERE numLivre = :numLivre AND numAuteur = :numAuteur";
        $req_prep = Connexion::pdo()->prepare($requete);
        $tab = array(
            "numLivre" => $numLivre,
            "numAuteur" => $numAuteur
        );
        try {
            $req_prep->execute($tab);
            return true;
        } catch (PDOException $e) {
            echo "Erreur de suppression : " . $e->getMessage();
            return false;
        }
    }

    public static function addAuteurForLivre($numLivre, $numAuteur){
        $requete = "INSERT INTO estauteurde VALUES (:numAuteur, :numLivre)";
        $req_prep = Connexion::pdo()->prepare($requete);
        $tab = array(
            "numLivre" => $numLivre,
            "numAuteur" => $numAuteur
        );
        try {
            $req_prep->execute($tab);
            return true;
        } catch (PDOException $e) {
            echo "Erreur d'ajout : " . $e->getMessage();
            return false;
        }
    }
}